// <auto-generated />
using System;
using DatabaseHandler.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseHandler.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectedUsers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastMessageId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectionId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentNameShortForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.LevelTerm", b =>
                {
                    b.Property<int?>("LevelTermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("LevelTermId"));

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelTermId");

                    b.ToTable("LevelTerm");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Message", b =>
                {
                    b.Property<string>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Messages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("ConnectionId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Officials", b =>
                {
                    b.Property<int?>("OfficialNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("OfficialNo"));

                    b.Property<int?>("IndividualId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("OfficialNo");

                    b.HasIndex("IndividualId");

                    b.HasIndex("RoleId");

                    b.ToTable("Officials");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Role", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Students", b =>
                {
                    b.Property<int?>("StudentNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("StudentNo"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualId")
                        .HasColumnType("int");

                    b.Property<int?>("LevelTermId")
                        .HasColumnType("int");

                    b.HasKey("StudentNo");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("IndividualId");

                    b.HasIndex("LevelTermId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Teachers", b =>
                {
                    b.Property<int?>("TeacherNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TeacherNo"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndividualId")
                        .HasColumnType("int");

                    b.HasKey("TeacherNo");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("IndividualId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Users", b =>
                {
                    b.Property<int?>("IndividualID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IndividualID"));

                    b.Property<string>("ConnectionListAndLastMessageJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IndividualID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Message", b =>
                {
                    b.HasOne("DatabaseHandler.Models.EntityModels.Connection", "Connection")
                        .WithMany()
                        .HasForeignKey("ConnectionId");

                    b.HasOne("DatabaseHandler.Models.EntityModels.Users", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.Navigation("Connection");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Officials", b =>
                {
                    b.HasOne("DatabaseHandler.Models.EntityModels.Users", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId");

                    b.HasOne("DatabaseHandler.Models.EntityModels.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Individual");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Students", b =>
                {
                    b.HasOne("DatabaseHandler.Models.EntityModels.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("DatabaseHandler.Models.EntityModels.Users", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId");

                    b.HasOne("DatabaseHandler.Models.EntityModels.LevelTerm", "LevelTerm")
                        .WithMany()
                        .HasForeignKey("LevelTermId");

                    b.Navigation("Department");

                    b.Navigation("Individual");

                    b.Navigation("LevelTerm");
                });

            modelBuilder.Entity("DatabaseHandler.Models.EntityModels.Teachers", b =>
                {
                    b.HasOne("DatabaseHandler.Models.EntityModels.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("DatabaseHandler.Models.EntityModels.Users", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId");

                    b.Navigation("Department");

                    b.Navigation("Individual");
                });
#pragma warning restore 612, 618
        }
    }
}
